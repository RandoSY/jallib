#summary how files go to the /validated section
#labels Phase-QA


The purpose of this document is to describe how files go from the _unvalidated_ map to the _validated_ map. Briefly, _validated_ contains files that are "good" enough to be considered stable. _unvalidated_ deals with files under development. For more, see UnderstandingSvnStructure.


== Validation criteria ==

All jal files must follow these rules:

 # *it must pass the JSG validator*
 # *it must compile against the jallib repository, without any warnings (and errors...)*
 # *if the file is a library, there must be at least one sample, available for at least one target chip*

About the last point, this means some target chip are more tested than other, it depends on how many tests and samples are available. The TestingMatrix and dedicated testing pages are here to help having an overview. 



== The validation process ==

 # for each file, people vote. If there's more than 50% positive opinion, the file can go to the _validated_ map
 # every jallib project member can vote
 # once a file has been promoted to _validated_, it is *copied*, using `svn copy` (to keep history logs)


Once enough files have been moved (there's no more enough positive votes), once everybody is happy, a new release _can_ be created. It's not mandatory.

 # jalapi must be regenerated using the these new validated files.
 # the testing matrix must be regenerated, too.
 # if a new release is created, a new svn branch is created, so we always have access to the release's content at this time.
 # once the branch is created, `svn export` will extract all files without SVN information. Files are then flatten in the include map. A new tarball and zip are created.
 # these tarball and zip files are uploaded to the *files* section of jallib google code project.
 # announce mail to jallist !!!