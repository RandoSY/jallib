#summary structure and relation between different libraries
#labels Phase-Implementation


= Library structure =


== Device File ==

There is a device include file for every (supported) PICmicro.
The device files are automatically generated from information obtained from MPLAB files (ic .dev and .lkr files). The include files contain information about all ports and special function registers. In addition these contain some 'standard' functions like automatic shadowing of ports and pins.

It lists the various configuration settings. 

File name format: <pictype>.jal, more specifically `xxfyyyy.jal` in which
  * 'xx' can be 10, 12, 16, or 18
  * 'f' can be f, hv, or lf 
  * 'yyyy' is a combination of digits and letters  

Device include files do not intialize any register or configuration bit (fuse). This falls under the responsibility of the user program.
Other user program responsibilities:
  * Specification of oscillator speed, e.g. 
    `pragma clockspeed 4_000_000`
  * Enabling digital I/O when the chip has analog features and the port(s) are by default in analog mode. For this purpose each device include file contains a special function: `enable_digital_io()`, which contains the instructions for the specific PICmicro.


== Samples ==

The sample program that explains a library sets the default needed parameters. It also includes paramaters that have a defualt setting in the library, so need not be declared by the user, in comments, with the default value. Example:
 

{{{
const baudrate = 2400

-- const nine_bit_tx    = false
-- const nine_bit_rx    = false
-- const synchronous = false


include serial_hardware_16
}}}


Since the hardware libraries have their default values, direct messing with configuration bits in special function registers should happen after including the library.  

The *aim* is for the newbie to include the library with a minimum of parameters so that it works right away.
