#summary structure and relation between different libraries
#labels Phase-Implementation


= Library structure =


== Device File ==

The device file is (preferably) automatically generated from a Microchip INC file and contains information about all ports and special function registers.

It lists the various configuration settings. 

Proposed name: `picxxfyyyy_dev.jal` (at least for a flash PIC)

== Init File == 

-FIXME:
How do we call the file which sets the clock speed, analog functions, etc? 
Init library?  `picxxfyyyy_init.jal`

By default, the init file makes all pins digital IO and sets a standard xtal speed.


== Super Lib ==

The superlib includes all possible hardware libraries that are used on the PIC and sets the default needed parameters for these libs. It also includes paramaters that have a defualt setting in the library, so need not be declared by the user, in comments, with the default value. Example:
 

{{{
const baudrate = 2400

-- const nine_bit_tx    = false
-- const nine_bit_rx    = false
-- const synchronous = false


include serial_hardware_16


const SPI_mode  = true
const master    = true

-- const clock_polarity_idle_high = true

include SPI

const I2C_mode = false              -- both SPI and I2C can't be enabled

include I2C
}}}  


Since the hardware libs have their default values, direct messing with configuration bits 
in special function regs should happen after including the lib.  

The *aim* is for the newbie to include the superlib and write a very simple program. Reading the superlib will show him how to call the libraries and which constants should be declared. 
