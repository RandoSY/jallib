-- ===================================================
-- JALV2 PICmicro specifications for 18F8722
--
-- Created with Dev2Jal Rexx script version 0.0.29
-- Author: Rob Hamerling
-- File creation date/time: 27 Jul 2008 19:36:06
--
-- Sources of information:
--  - x:/mplab814/mplab_ide/device/PIC18F8722.dev
--  - x:/mplab814/mpasm_suite/lkr/18F8722_g.lkr
--
-- ---------------------------------------------------
-- Summary of manual changes
--
--   date        description
-- ---------    --------------------------------------
-- yyyy/mm/dd   ... text ....
--
--
--
-- ---------------------------------------------------
--
-- Device-ID: 0x1420
-- DataSheet: DS-39646
-- Programming Specifications: DS-39643
-- Vdd Range: 2.125-5.500 Nominal: 5.000
-- Vpp Range: 5.500-12.500 Default: 11.5000
--
-- ===================================================
--
include ChipDef                     -- common constants
--
pragma  target  cpu   pic_16    -- (banks = 16)
pragma  target  chip  18F8722
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    131072
pragma  eeprom  0xF00000,1024
pragma  data    0x60-0xFF,0x100-0x1FF,0x200-0x2FF,0x300-0x3FF,0x400-0x4FF
pragma  data    0x500-0x5FF,0x600-0x6FF,0x700-0x7FF,0x800-0x8FF,0x900-0x9FF
pragma  data    0xA00-0xAFF,0xB00-0xBFF,0xC00-0xCFF,0xD00-0xDFF,0xE00-0xEFF
pragma  data    0xF00-0xF5F
pragma  shared  0x0-0x5F
--
var volatile byte _pic_accum shared at 0x5E   -- (compiler)
var volatile byte _pic_isr_w shared at 0x5F   -- (compiler)
--
const word  _fuses_ct             = 14
const dword _fuse_base[_fuses_ct] = { 0x300000,
                                      0x300001,
                                      0x300002,
                                      0x300003,
                                      0x300004,
                                      0x300005,
                                      0x300006,
                                      0x300007,
                                      0x300008,
                                      0x300009,
                                      0x30000A,
                                      0x30000B,
                                      0x30000C,
                                      0x30000D }
const byte  _fuses[_fuses_ct]     = { 0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF,
                                      0xFF }
--
const word  _ID_ct                = 8
const dword _ID_base[_ID_ct]      = { 0x200000,
                                      0x200001,
                                      0x200002,
                                      0x200003,
                                      0x200004,
                                      0x200005,
                                      0x200006,
                                      0x200007 }
const byte  _ID[_ID_ct]           = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }
--
-- ------------------------------------------------
var volatile byte   SSP2CON2             shared at 0xF62
var volatile bit    SSP2CON2_GCEN        shared at SSP2CON2 : 7        -- !!!
var volatile bit    SSP2CON2_ACKSTAT     shared at SSP2CON2 : 6        -- !!!
var volatile bit    SSP2CON2_ACKDT       shared at SSP2CON2 : 5        -- !!!
var volatile bit    SSP2CON2_ACKEN       shared at SSP2CON2 : 4        -- !!!
var volatile bit    SSP2CON2_RCEN        shared at SSP2CON2 : 3        -- !!!
var volatile bit    SSP2CON2_PEN         shared at SSP2CON2 : 2        -- !!!
var volatile bit    SSP2CON2_RSEN        shared at SSP2CON2 : 1        -- !!!
var volatile bit    SSP2CON2_SEN         shared at SSP2CON2 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SSP2CON1             shared at 0xF63
var volatile bit    SSP2CON1_WCOL        shared at SSP2CON1 : 7        -- !!!
var volatile bit    SSP2CON1_SSPOV       shared at SSP2CON1 : 6        -- !!!
var volatile bit    SSP2CON1_SSPEN       shared at SSP2CON1 : 5        -- !!!
var volatile bit    SSP2CON1_CKP         shared at SSP2CON1 : 4        -- !!!
var volatile bit*4  SSP2CON1_SSPM        shared at SSP2CON1 : 0
-- ------------------------------------------------
var volatile byte   SSP2STAT             shared at 0xF64
var volatile bit    SSP2STAT_SMP         shared at SSP2STAT : 7        -- !!!
var volatile bit    SSP2STAT_CKE         shared at SSP2STAT : 6        -- !!!
var volatile bit    SSP2STAT_D           shared at SSP2STAT : 5        -- !!!
var volatile bit    SSP2STAT_NA          shared at SSP2STAT : 5        -- !!!
var volatile bit    SSP2STAT_P           shared at SSP2STAT : 4        -- !!!
var volatile bit    SSP2STAT_S           shared at SSP2STAT : 3        -- !!!
var volatile bit    SSP2STAT_R           shared at SSP2STAT : 2        -- !!!
var volatile bit    SSP2STAT_NW          shared at SSP2STAT : 2        -- !!!
var volatile bit    SSP2STAT_UA          shared at SSP2STAT : 1        -- !!!
var volatile bit    SSP2STAT_BF          shared at SSP2STAT : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SSP2ADD              shared at 0xF65
var volatile byte   SSP2ADD_SSPADD       shared at SSP2ADD
-- ------------------------------------------------
var volatile byte   SSP2BUF              shared at 0xF66
var volatile byte   SSP2BUF_SSPBUF       shared at SSP2BUF
-- ------------------------------------------------
var volatile byte   ECCP2DEL             shared at 0xF67
var volatile bit    ECCP2DEL_P2RSEN      shared at ECCP2DEL : 7        -- !!!
var volatile bit*7  ECCP2DEL_P2DC        shared at ECCP2DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP2AS              shared at 0xF68
var volatile bit    ECCP2AS_ECCP2ASE     shared at ECCP2AS : 7        -- !!!
var volatile bit*2  ECCP2AS_PSS2AC       shared at ECCP2AS : 2
var volatile bit*2  ECCP2AS_PSS2BD       shared at ECCP2AS : 0
-- ------------------------------------------------
var volatile byte   ECCP3DEL             shared at 0xF69
var volatile bit    ECCP3DEL_P3RSEN      shared at ECCP3DEL : 7        -- !!!
var volatile bit*7  ECCP3DEL_P3DC        shared at ECCP3DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP3AS              shared at 0xF6A
var volatile bit    ECCP3AS_ECCP3ASE     shared at ECCP3AS : 7        -- !!!
var volatile bit*2  ECCP3AS_PSS3AC       shared at ECCP3AS : 2
var volatile bit*2  ECCP3AS_PSS3BD       shared at ECCP3AS : 0
-- ------------------------------------------------
var volatile byte   RCSTA2               shared at 0xF6B
var volatile bit    RCSTA2_SPEN          shared at RCSTA2 : 7        -- !!!
var volatile bit    RCSTA2_RX9           shared at RCSTA2 : 6        -- !!!
var volatile bit    RCSTA2_SREN          shared at RCSTA2 : 5        -- !!!
var volatile bit    RCSTA2_CREN          shared at RCSTA2 : 4        -- !!!
var volatile bit    RCSTA2_ADDEN         shared at RCSTA2 : 3        -- !!!
var volatile bit    RCSTA2_FERR          shared at RCSTA2 : 2        -- !!!
var volatile bit    RCSTA2_OERR          shared at RCSTA2 : 1        -- !!!
var volatile bit    RCSTA2_RX9D          shared at RCSTA2 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   TXSTA2               shared at 0xF6C
var volatile bit    TXSTA2_CSRC          shared at TXSTA2 : 7        -- !!!
var volatile bit    TXSTA2_TX9           shared at TXSTA2 : 6        -- !!!
var volatile bit    TXSTA2_TXEN          shared at TXSTA2 : 5        -- !!!
var volatile bit    TXSTA2_SYNC          shared at TXSTA2 : 4        -- !!!
var volatile bit    TXSTA2_SENDB         shared at TXSTA2 : 3        -- !!!
var volatile bit    TXSTA2_BRGH          shared at TXSTA2 : 2        -- !!!
var volatile bit    TXSTA2_TRMT          shared at TXSTA2 : 1        -- !!!
var volatile bit    TXSTA2_TX9D          shared at TXSTA2 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   TXREG2               shared at 0xF6D
-- ------------------------------------------------
var volatile byte   RCREG2               shared at 0xF6E
-- ------------------------------------------------
var volatile byte   SPBRG2               shared at 0xF6F
-- ------------------------------------------------
var volatile byte   CCP5CON              shared at 0xF70
var volatile bit*2  CCP5CON_DC5B         shared at CCP5CON : 4
var volatile bit*4  CCP5CON_CCP5M        shared at CCP5CON : 0
-- ------------------------------------------------
var volatile word   CCPR5                shared at 0xF71
var volatile word   CCPR5_CCPR5          shared at CCPR5
-- ------------------------------------------------
var volatile byte   CCPR5L               shared at 0xF71
var volatile byte   CCPR5L_CCPR5L        shared at CCPR5L
-- ------------------------------------------------
var volatile byte   CCPR5H               shared at 0xF72
var volatile byte   CCPR5H_CCPR5H        shared at CCPR5H
-- ------------------------------------------------
var volatile byte   CCP4CON              shared at 0xF73
var volatile bit*2  CCP4CON_DC4B         shared at CCP4CON : 4
var volatile bit*4  CCP4CON_CCP4M        shared at CCP4CON : 0
-- ------------------------------------------------
var volatile word   CCPR4                shared at 0xF74
var volatile word   CCPR4_CCPR4          shared at CCPR4
-- ------------------------------------------------
var volatile byte   CCPR4L               shared at 0xF74
var volatile byte   CCPR4L_CCPR4L        shared at CCPR4L
-- ------------------------------------------------
var volatile byte   CCPR4H               shared at 0xF75
var volatile byte   CCPR4H_CCPR4H        shared at CCPR4H
-- ------------------------------------------------
var volatile byte   T4CON                shared at 0xF76
var volatile bit*4  TOUTPS               shared at T4CON : 3
var volatile bit    TMR4ON               shared at T4CON : 2
var volatile bit*2  T4CKPS               shared at T4CON : 0
-- ------------------------------------------------
var volatile byte   PR4                  shared at 0xF77
-- ------------------------------------------------
var volatile byte   TMR4                 shared at 0xF78
-- ------------------------------------------------
var volatile byte   ECCP1DEL             shared at 0xF79
var volatile bit    ECCP1DEL_P1RSEN      shared at ECCP1DEL : 7        -- !!!
var volatile bit*7  ECCP1DEL_P1DC        shared at ECCP1DEL : 0
-- ------------------------------------------------
var volatile byte   BAUDCON2             shared at 0xF7C
var volatile bit    BAUDCON2_ABDOVF      shared at BAUDCON2 : 7        -- !!!
var volatile bit    BAUDCON2_RCIDL       shared at BAUDCON2 : 6        -- !!!
var volatile bit    BAUDCON2_SCKP        shared at BAUDCON2 : 4        -- !!!
var volatile bit    BAUDCON2_BRG16       shared at BAUDCON2 : 3        -- !!!
var volatile bit    BAUDCON2_WUE         shared at BAUDCON2 : 1        -- !!!
var volatile bit    BAUDCON2_ABDEN       shared at BAUDCON2 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SPBRGH2              shared at 0xF7D
-- ------------------------------------------------
var volatile byte   BAUDCON1             shared at 0xF7E
var volatile bit    BAUDCON1_ABDOVF      shared at BAUDCON1 : 7        -- !!!
var volatile bit    BAUDCON1_RCIDL       shared at BAUDCON1 : 6        -- !!!
var volatile bit    BAUDCON1_SCKP        shared at BAUDCON1 : 4        -- !!!
var volatile bit    BAUDCON1_BRG16       shared at BAUDCON1 : 3        -- !!!
var volatile bit    BAUDCON1_WUE         shared at BAUDCON1 : 1        -- !!!
var volatile bit    BAUDCON1_ABDEN       shared at BAUDCON1 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SPBRGH1              shared at 0xF7F
-- ------------------------------------------------
var volatile byte   PORTA                shared at 0xF80
--
var          byte  _port_A_shadow        = PORTA
--
procedure _port_A_flush is
  pragma inline
  PORTA = _port_A_shadow
end procedure
--
procedure portA'put (byte in x) is
  pragma inline
  _port_A_shadow = x
  _port_A_flush
end procedure
--
var  byte port_A_low
procedure port_A_low'put(byte in x) is
  _port_A_shadow = (_port_A_shadow & 0xF0) | (x & 0x0F)
  _port_A_flush
end procedure
function port_A_low'get return byte is
  return PORTA & 0x0F
end function
--
var  byte port_A_high
procedure port_A_high'put(byte in x) is
  _port_A_shadow = (_port_A_shadow & 0x0F) | (x << 4)
  _port_A_flush
end procedure
function port_A_high'get return byte is
  return PORTA >> 4
end function
--
var volatile bit    RA7                  shared at PORTA : 7
var volatile bit pin_A7 shared at PORTA : 7
procedure pin_A7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 7
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA6                  shared at PORTA : 6
var volatile bit pin_A6 shared at PORTA : 6
procedure pin_A6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 6
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA5                  shared at PORTA : 5
var volatile bit pin_A5 shared at PORTA : 5
procedure pin_A5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 5
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA4                  shared at PORTA : 4
var volatile bit pin_A4 shared at PORTA : 4
procedure pin_A4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 4
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA3                  shared at PORTA : 3
var volatile bit pin_A3 shared at PORTA : 3
procedure pin_A3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 3
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA2                  shared at PORTA : 2
var volatile bit pin_A2 shared at PORTA : 2
procedure pin_A2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 2
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA1                  shared at PORTA : 1
var volatile bit pin_A1 shared at PORTA : 1
procedure pin_A1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 1
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
var volatile bit    RA0                  shared at PORTA : 0
var volatile bit pin_A0 shared at PORTA : 0
procedure pin_A0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_A_shadow : 0
  _Tmp_Bit = x
  _port_A_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTB                shared at 0xF81
--
var          byte  _port_B_shadow        = PORTB
--
procedure _port_B_flush is
  pragma inline
  PORTB = _port_B_shadow
end procedure
--
procedure portB'put (byte in x) is
  pragma inline
  _port_B_shadow = x
  _port_B_flush
end procedure
--
var  byte port_B_low
procedure port_B_low'put(byte in x) is
  _port_B_shadow = (_port_B_shadow & 0xF0) | (x & 0x0F)
  _port_B_flush
end procedure
function port_B_low'get return byte is
  return PORTB & 0x0F
end function
--
var  byte port_B_high
procedure port_B_high'put(byte in x) is
  _port_B_shadow = (_port_B_shadow & 0x0F) | (x << 4)
  _port_B_flush
end procedure
function port_B_high'get return byte is
  return PORTB >> 4
end function
--
var volatile bit    RB7                  shared at PORTB : 7
var volatile bit pin_B7 shared at PORTB : 7
procedure pin_B7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 7
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB6                  shared at PORTB : 6
var volatile bit pin_B6 shared at PORTB : 6
procedure pin_B6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 6
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB5                  shared at PORTB : 5
var volatile bit pin_B5 shared at PORTB : 5
procedure pin_B5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 5
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB4                  shared at PORTB : 4
var volatile bit pin_B4 shared at PORTB : 4
procedure pin_B4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 4
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB3                  shared at PORTB : 3
var volatile bit pin_B3 shared at PORTB : 3
procedure pin_B3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 3
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB2                  shared at PORTB : 2
var volatile bit pin_B2 shared at PORTB : 2
procedure pin_B2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 2
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB1                  shared at PORTB : 1
var volatile bit pin_B1 shared at PORTB : 1
procedure pin_B1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 1
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
var volatile bit    RB0                  shared at PORTB : 0
var volatile bit pin_B0 shared at PORTB : 0
procedure pin_B0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_B_shadow : 0
  _Tmp_Bit = x
  _port_B_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTC                shared at 0xF82
--
var          byte  _port_C_shadow        = PORTC
--
procedure _port_C_flush is
  pragma inline
  PORTC = _port_C_shadow
end procedure
--
procedure portC'put (byte in x) is
  pragma inline
  _port_C_shadow = x
  _port_C_flush
end procedure
--
var  byte port_C_low
procedure port_C_low'put(byte in x) is
  _port_C_shadow = (_port_C_shadow & 0xF0) | (x & 0x0F)
  _port_C_flush
end procedure
function port_C_low'get return byte is
  return PORTC & 0x0F
end function
--
var  byte port_C_high
procedure port_C_high'put(byte in x) is
  _port_C_shadow = (_port_C_shadow & 0x0F) | (x << 4)
  _port_C_flush
end procedure
function port_C_high'get return byte is
  return PORTC >> 4
end function
--
var volatile bit    RC7                  shared at PORTC : 7
var volatile bit pin_C7 shared at PORTC : 7
procedure pin_C7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 7
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC6                  shared at PORTC : 6
var volatile bit pin_C6 shared at PORTC : 6
procedure pin_C6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 6
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC5                  shared at PORTC : 5
var volatile bit pin_C5 shared at PORTC : 5
procedure pin_C5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 5
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC4                  shared at PORTC : 4
var volatile bit pin_C4 shared at PORTC : 4
procedure pin_C4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 4
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC3                  shared at PORTC : 3
var volatile bit pin_C3 shared at PORTC : 3
procedure pin_C3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 3
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC2                  shared at PORTC : 2
var volatile bit pin_C2 shared at PORTC : 2
procedure pin_C2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 2
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC1                  shared at PORTC : 1
var volatile bit pin_C1 shared at PORTC : 1
procedure pin_C1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 1
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
var volatile bit    RC0                  shared at PORTC : 0
var volatile bit pin_C0 shared at PORTC : 0
procedure pin_C0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_C_shadow : 0
  _Tmp_Bit = x
  _port_C_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTD                shared at 0xF83
--
var          byte  _port_D_shadow        = PORTD
--
procedure _port_D_flush is
  pragma inline
  PORTD = _port_D_shadow
end procedure
--
procedure portD'put (byte in x) is
  pragma inline
  _port_D_shadow = x
  _port_D_flush
end procedure
--
var  byte port_D_low
procedure port_D_low'put(byte in x) is
  _port_D_shadow = (_port_D_shadow & 0xF0) | (x & 0x0F)
  _port_D_flush
end procedure
function port_D_low'get return byte is
  return PORTD & 0x0F
end function
--
var  byte port_D_high
procedure port_D_high'put(byte in x) is
  _port_D_shadow = (_port_D_shadow & 0x0F) | (x << 4)
  _port_D_flush
end procedure
function port_D_high'get return byte is
  return PORTD >> 4
end function
--
var volatile bit    RD7                  shared at PORTD : 7
var volatile bit pin_D7 shared at PORTD : 7
procedure pin_D7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 7
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD6                  shared at PORTD : 6
var volatile bit pin_D6 shared at PORTD : 6
procedure pin_D6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 6
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD5                  shared at PORTD : 5
var volatile bit pin_D5 shared at PORTD : 5
procedure pin_D5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 5
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD4                  shared at PORTD : 4
var volatile bit pin_D4 shared at PORTD : 4
procedure pin_D4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 4
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD3                  shared at PORTD : 3
var volatile bit pin_D3 shared at PORTD : 3
procedure pin_D3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 3
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD2                  shared at PORTD : 2
var volatile bit pin_D2 shared at PORTD : 2
procedure pin_D2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 2
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD1                  shared at PORTD : 1
var volatile bit pin_D1 shared at PORTD : 1
procedure pin_D1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 1
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
var volatile bit    RD0                  shared at PORTD : 0
var volatile bit pin_D0 shared at PORTD : 0
procedure pin_D0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_D_shadow : 0
  _Tmp_Bit = x
  _port_D_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTE                shared at 0xF84
--
var          byte  _port_E_shadow        = PORTE
--
procedure _port_E_flush is
  pragma inline
  PORTE = _port_E_shadow
end procedure
--
procedure portE'put (byte in x) is
  pragma inline
  _port_E_shadow = x
  _port_E_flush
end procedure
--
var  byte port_E_low
procedure port_E_low'put(byte in x) is
  _port_E_shadow = (_port_E_shadow & 0xF0) | (x & 0x0F)
  _port_E_flush
end procedure
function port_E_low'get return byte is
  return PORTE & 0x0F
end function
--
var  byte port_E_high
procedure port_E_high'put(byte in x) is
  _port_E_shadow = (_port_E_shadow & 0x0F) | (x << 4)
  _port_E_flush
end procedure
function port_E_high'get return byte is
  return PORTE >> 4
end function
--
var volatile bit    RE7                  shared at PORTE : 7
var volatile bit pin_E7 shared at PORTE : 7
procedure pin_E7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 7
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE6                  shared at PORTE : 6
var volatile bit pin_E6 shared at PORTE : 6
procedure pin_E6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 6
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE5                  shared at PORTE : 5
var volatile bit pin_E5 shared at PORTE : 5
procedure pin_E5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 5
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE4                  shared at PORTE : 4
var volatile bit pin_E4 shared at PORTE : 4
procedure pin_E4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 4
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE3                  shared at PORTE : 3
var volatile bit pin_E3 shared at PORTE : 3
procedure pin_E3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 3
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE2                  shared at PORTE : 2
var volatile bit pin_E2 shared at PORTE : 2
procedure pin_E2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 2
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE1                  shared at PORTE : 1
var volatile bit pin_E1 shared at PORTE : 1
procedure pin_E1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 1
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
var volatile bit    RE0                  shared at PORTE : 0
var volatile bit pin_E0 shared at PORTE : 0
procedure pin_E0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_E_shadow : 0
  _Tmp_Bit = x
  _port_E_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTF                shared at 0xF85
--
var          byte  _port_F_shadow        = PORTF
--
procedure _port_F_flush is
  pragma inline
  PORTF = _port_F_shadow
end procedure
--
procedure portF'put (byte in x) is
  pragma inline
  _port_F_shadow = x
  _port_F_flush
end procedure
--
var  byte port_F_low
procedure port_F_low'put(byte in x) is
  _port_F_shadow = (_port_F_shadow & 0xF0) | (x & 0x0F)
  _port_F_flush
end procedure
function port_F_low'get return byte is
  return PORTF & 0x0F
end function
--
var  byte port_F_high
procedure port_F_high'put(byte in x) is
  _port_F_shadow = (_port_F_shadow & 0x0F) | (x << 4)
  _port_F_flush
end procedure
function port_F_high'get return byte is
  return PORTF >> 4
end function
--
var volatile bit    RF7                  shared at PORTF : 7
var volatile bit pin_F7 shared at PORTF : 7
procedure pin_F7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 7
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF6                  shared at PORTF : 6
var volatile bit pin_F6 shared at PORTF : 6
procedure pin_F6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 6
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF5                  shared at PORTF : 5
var volatile bit pin_F5 shared at PORTF : 5
procedure pin_F5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 5
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF4                  shared at PORTF : 4
var volatile bit pin_F4 shared at PORTF : 4
procedure pin_F4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 4
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF3                  shared at PORTF : 3
var volatile bit pin_F3 shared at PORTF : 3
procedure pin_F3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 3
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF2                  shared at PORTF : 2
var volatile bit pin_F2 shared at PORTF : 2
procedure pin_F2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 2
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF1                  shared at PORTF : 1
var volatile bit pin_F1 shared at PORTF : 1
procedure pin_F1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 1
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
var volatile bit    RF0                  shared at PORTF : 0
var volatile bit pin_F0 shared at PORTF : 0
procedure pin_F0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_F_shadow : 0
  _Tmp_Bit = x
  _port_F_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTG                shared at 0xF86
--
var          byte  _port_G_shadow        = PORTG
--
procedure _port_G_flush is
  pragma inline
  PORTG = _port_G_shadow
end procedure
--
procedure portG'put (byte in x) is
  pragma inline
  _port_G_shadow = x
  _port_G_flush
end procedure
--
var  byte port_G_low
procedure port_G_low'put(byte in x) is
  _port_G_shadow = (_port_G_shadow & 0xF0) | (x & 0x0F)
  _port_G_flush
end procedure
function port_G_low'get return byte is
  return PORTG & 0x0F
end function
--
var  byte port_G_high
procedure port_G_high'put(byte in x) is
  _port_G_shadow = (_port_G_shadow & 0x0F) | (x << 4)
  _port_G_flush
end procedure
function port_G_high'get return byte is
  return PORTG >> 4
end function
--
var volatile bit    RG5                  shared at PORTG : 5
var volatile bit pin_G5 shared at PORTG : 5
procedure pin_G5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 5
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
var volatile bit    RG4                  shared at PORTG : 4
var volatile bit pin_G4 shared at PORTG : 4
procedure pin_G4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 4
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
var volatile bit    RG3                  shared at PORTG : 3
var volatile bit pin_G3 shared at PORTG : 3
procedure pin_G3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 3
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
var volatile bit    RG2                  shared at PORTG : 2
var volatile bit pin_G2 shared at PORTG : 2
procedure pin_G2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 2
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
var volatile bit    RG1                  shared at PORTG : 1
var volatile bit pin_G1 shared at PORTG : 1
procedure pin_G1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 1
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
var volatile bit    RG0                  shared at PORTG : 0
var volatile bit pin_G0 shared at PORTG : 0
procedure pin_G0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_G_shadow : 0
  _Tmp_Bit = x
  _port_G_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTH                shared at 0xF87
--
var          byte  _port_H_shadow        = PORTH
--
procedure _port_H_flush is
  pragma inline
  PORTH = _port_H_shadow
end procedure
--
procedure portH'put (byte in x) is
  pragma inline
  _port_H_shadow = x
  _port_H_flush
end procedure
--
var  byte port_H_low
procedure port_H_low'put(byte in x) is
  _port_H_shadow = (_port_H_shadow & 0xF0) | (x & 0x0F)
  _port_H_flush
end procedure
function port_H_low'get return byte is
  return PORTH & 0x0F
end function
--
var  byte port_H_high
procedure port_H_high'put(byte in x) is
  _port_H_shadow = (_port_H_shadow & 0x0F) | (x << 4)
  _port_H_flush
end procedure
function port_H_high'get return byte is
  return PORTH >> 4
end function
--
var volatile bit    RH7                  shared at PORTH : 7
var volatile bit pin_H7 shared at PORTH : 7
procedure pin_H7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 7
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH6                  shared at PORTH : 6
var volatile bit pin_H6 shared at PORTH : 6
procedure pin_H6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 6
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH5                  shared at PORTH : 5
var volatile bit pin_H5 shared at PORTH : 5
procedure pin_H5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 5
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH4                  shared at PORTH : 4
var volatile bit pin_H4 shared at PORTH : 4
procedure pin_H4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 4
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH3                  shared at PORTH : 3
var volatile bit pin_H3 shared at PORTH : 3
procedure pin_H3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 3
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH2                  shared at PORTH : 2
var volatile bit pin_H2 shared at PORTH : 2
procedure pin_H2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 2
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH1                  shared at PORTH : 1
var volatile bit pin_H1 shared at PORTH : 1
procedure pin_H1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 1
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
var volatile bit    RH0                  shared at PORTH : 0
var volatile bit pin_H0 shared at PORTH : 0
procedure pin_H0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_H_shadow : 0
  _Tmp_Bit = x
  _port_H_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   PORTJ                shared at 0xF88
--
var          byte  _port_J_shadow        = PORTJ
--
procedure _port_J_flush is
  pragma inline
  PORTJ = _port_J_shadow
end procedure
--
procedure portJ'put (byte in x) is
  pragma inline
  _port_J_shadow = x
  _port_J_flush
end procedure
--
var  byte port_J_low
procedure port_J_low'put(byte in x) is
  _port_J_shadow = (_port_J_shadow & 0xF0) | (x & 0x0F)
  _port_J_flush
end procedure
function port_J_low'get return byte is
  return PORTJ & 0x0F
end function
--
var  byte port_J_high
procedure port_J_high'put(byte in x) is
  _port_J_shadow = (_port_J_shadow & 0x0F) | (x << 4)
  _port_J_flush
end procedure
function port_J_high'get return byte is
  return PORTJ >> 4
end function
--
var volatile bit    RJ7                  shared at PORTJ : 7
var volatile bit pin_J7 shared at PORTJ : 7
procedure pin_J7'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 7
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ6                  shared at PORTJ : 6
var volatile bit pin_J6 shared at PORTJ : 6
procedure pin_J6'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 6
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ5                  shared at PORTJ : 5
var volatile bit pin_J5 shared at PORTJ : 5
procedure pin_J5'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 5
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ4                  shared at PORTJ : 4
var volatile bit pin_J4 shared at PORTJ : 4
procedure pin_J4'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 4
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ3                  shared at PORTJ : 3
var volatile bit pin_J3 shared at PORTJ : 3
procedure pin_J3'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 3
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ2                  shared at PORTJ : 2
var volatile bit pin_J2 shared at PORTJ : 2
procedure pin_J2'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 2
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ1                  shared at PORTJ : 1
var volatile bit pin_J1 shared at PORTJ : 1
procedure pin_J1'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 1
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
var volatile bit    RJ0                  shared at PORTJ : 0
var volatile bit pin_J0 shared at PORTJ : 0
procedure pin_J0'put(bit in x) is
  pragma inline
  var bit _Tmp_Bit at _port_J_shadow : 0
  _Tmp_Bit = x
  _port_J_flush
end procedure
--
-- ------------------------------------------------
var volatile byte   LATA                 shared at 0xF89
var volatile bit    LATA7                shared at LATA : 7
var volatile bit    LATA6                shared at LATA : 6
var volatile bit    LATA5                shared at LATA : 5
var volatile bit    LATA4                shared at LATA : 4
var volatile bit    LATA3                shared at LATA : 3
var volatile bit    LATA2                shared at LATA : 2
var volatile bit    LATA1                shared at LATA : 1
var volatile bit    LATA0                shared at LATA : 0
-- ------------------------------------------------
var volatile byte   LATB                 shared at 0xF8A
var volatile bit    LATB7                shared at LATB : 7
var volatile bit    LATB6                shared at LATB : 6
var volatile bit    LATB5                shared at LATB : 5
var volatile bit    LATB4                shared at LATB : 4
var volatile bit    LATB3                shared at LATB : 3
var volatile bit    LATB2                shared at LATB : 2
var volatile bit    LATB1                shared at LATB : 1
var volatile bit    LATB0                shared at LATB : 0
-- ------------------------------------------------
var volatile byte   LATC                 shared at 0xF8B
var volatile bit    LATC7                shared at LATC : 7
var volatile bit    LATC6                shared at LATC : 6
var volatile bit    LATC5                shared at LATC : 5
var volatile bit    LATC4                shared at LATC : 4
var volatile bit    LATC3                shared at LATC : 3
var volatile bit    LATC2                shared at LATC : 2
var volatile bit    LATC1                shared at LATC : 1
var volatile bit    LATC0                shared at LATC : 0
-- ------------------------------------------------
var volatile byte   LATD                 shared at 0xF8C
var volatile bit    LATD7                shared at LATD : 7
var volatile bit    LATD6                shared at LATD : 6
var volatile bit    LATD5                shared at LATD : 5
var volatile bit    LATD4                shared at LATD : 4
var volatile bit    LATD3                shared at LATD : 3
var volatile bit    LATD2                shared at LATD : 2
var volatile bit    LATD1                shared at LATD : 1
var volatile bit    LATD0                shared at LATD : 0
-- ------------------------------------------------
var volatile byte   LATE                 shared at 0xF8D
var volatile bit    LATE7                shared at LATE : 7
var volatile bit    LATE6                shared at LATE : 6
var volatile bit    LATE5                shared at LATE : 5
var volatile bit    LATE4                shared at LATE : 4
var volatile bit    LATE3                shared at LATE : 3
var volatile bit    LATE2                shared at LATE : 2
var volatile bit    LATE1                shared at LATE : 1
var volatile bit    LATE0                shared at LATE : 0
-- ------------------------------------------------
var volatile byte   LATF                 shared at 0xF8E
var volatile bit    LATF7                shared at LATF : 7
var volatile bit    LATF6                shared at LATF : 6
var volatile bit    LATF5                shared at LATF : 5
var volatile bit    LATF4                shared at LATF : 4
var volatile bit    LATF3                shared at LATF : 3
var volatile bit    LATF2                shared at LATF : 2
var volatile bit    LATF1                shared at LATF : 1
var volatile bit    LATF0                shared at LATF : 0
-- ------------------------------------------------
var volatile byte   LATG                 shared at 0xF8F
var volatile bit    LATG4                shared at LATG : 4
var volatile bit    LATG3                shared at LATG : 3
var volatile bit    LATG2                shared at LATG : 2
var volatile bit    LATG1                shared at LATG : 1
var volatile bit    LATG0                shared at LATG : 0
-- ------------------------------------------------
var volatile byte   LATH                 shared at 0xF90
var volatile bit    LATH7                shared at LATH : 7
var volatile bit    LATH6                shared at LATH : 6
var volatile bit    LATH5                shared at LATH : 5
var volatile bit    LATH4                shared at LATH : 4
var volatile bit    LATH3                shared at LATH : 3
var volatile bit    LATH2                shared at LATH : 2
var volatile bit    LATH1                shared at LATH : 1
var volatile bit    LATH0                shared at LATH : 0
-- ------------------------------------------------
var volatile byte   LATJ                 shared at 0xF91
var volatile bit    LATJ7                shared at LATJ : 7
var volatile bit    LATJ6                shared at LATJ : 6
var volatile bit    LATJ5                shared at LATJ : 5
var volatile bit    LATJ4                shared at LATJ : 4
var volatile bit    LATJ3                shared at LATJ : 3
var volatile bit    LATJ2                shared at LATJ : 2
var volatile bit    LATJ1                shared at LATJ : 1
var volatile bit    LATJ0                shared at LATJ : 0
-- ------------------------------------------------
var volatile byte   TRISA                shared at 0xF92
var volatile byte   port_A_direction     shared at TRISA
--
procedure port_A_low_direction'put(byte in x) is
  TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function port_A_low_direction'get return byte is
  return TRISA & 0x0F
end function
--
procedure port_A_high_direction'put(byte in x) is
  TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function port_A_high_direction'get return byte is
  return (TRISA >> 4)
end function
--
var volatile bit    TRISA7               shared at TRISA : 7
var volatile bit    pin_A7_direction     shared at TRISA : 7
var volatile bit    TRISA6               shared at TRISA : 6
var volatile bit    pin_A6_direction     shared at TRISA : 6
var volatile bit    TRISA5               shared at TRISA : 5
var volatile bit    pin_A5_direction     shared at TRISA : 5
var volatile bit    TRISA4               shared at TRISA : 4
var volatile bit    pin_A4_direction     shared at TRISA : 4
var volatile bit    TRISA3               shared at TRISA : 3
var volatile bit    pin_A3_direction     shared at TRISA : 3
var volatile bit    TRISA2               shared at TRISA : 2
var volatile bit    pin_A2_direction     shared at TRISA : 2
var volatile bit    TRISA1               shared at TRISA : 1
var volatile bit    pin_A1_direction     shared at TRISA : 1
var volatile bit    TRISA0               shared at TRISA : 0
var volatile bit    pin_A0_direction     shared at TRISA : 0
-- ------------------------------------------------
var volatile byte   TRISB                shared at 0xF93
var volatile byte   port_B_direction     shared at TRISB
--
procedure port_B_low_direction'put(byte in x) is
  TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function port_B_low_direction'get return byte is
  return TRISB & 0x0F
end function
--
procedure port_B_high_direction'put(byte in x) is
  TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function port_B_high_direction'get return byte is
  return (TRISB >> 4)
end function
--
var volatile bit    TRISB7               shared at TRISB : 7
var volatile bit    pin_B7_direction     shared at TRISB : 7
var volatile bit    TRISB6               shared at TRISB : 6
var volatile bit    pin_B6_direction     shared at TRISB : 6
var volatile bit    TRISB5               shared at TRISB : 5
var volatile bit    pin_B5_direction     shared at TRISB : 5
var volatile bit    TRISB4               shared at TRISB : 4
var volatile bit    pin_B4_direction     shared at TRISB : 4
var volatile bit    TRISB3               shared at TRISB : 3
var volatile bit    pin_B3_direction     shared at TRISB : 3
var volatile bit    TRISB2               shared at TRISB : 2
var volatile bit    pin_B2_direction     shared at TRISB : 2
var volatile bit    TRISB1               shared at TRISB : 1
var volatile bit    pin_B1_direction     shared at TRISB : 1
var volatile bit    TRISB0               shared at TRISB : 0
var volatile bit    pin_B0_direction     shared at TRISB : 0
-- ------------------------------------------------
var volatile byte   TRISC                shared at 0xF94
var volatile byte   port_C_direction     shared at TRISC
--
procedure port_C_low_direction'put(byte in x) is
  TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function port_C_low_direction'get return byte is
  return TRISC & 0x0F
end function
--
procedure port_C_high_direction'put(byte in x) is
  TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function port_C_high_direction'get return byte is
  return (TRISC >> 4)
end function
--
var volatile bit    TRISC7               shared at TRISC : 7
var volatile bit    pin_C7_direction     shared at TRISC : 7
var volatile bit    TRISC6               shared at TRISC : 6
var volatile bit    pin_C6_direction     shared at TRISC : 6
var volatile bit    TRISC5               shared at TRISC : 5
var volatile bit    pin_C5_direction     shared at TRISC : 5
var volatile bit    TRISC4               shared at TRISC : 4
var volatile bit    pin_C4_direction     shared at TRISC : 4
var volatile bit    TRISC3               shared at TRISC : 3
var volatile bit    pin_C3_direction     shared at TRISC : 3
var volatile bit    TRISC2               shared at TRISC : 2
var volatile bit    pin_C2_direction     shared at TRISC : 2
var volatile bit    TRISC1               shared at TRISC : 1
var volatile bit    pin_C1_direction     shared at TRISC : 1
var volatile bit    TRISC0               shared at TRISC : 0
var volatile bit    pin_C0_direction     shared at TRISC : 0
-- ------------------------------------------------
var volatile byte   TRISD                shared at 0xF95
var volatile byte   port_D_direction     shared at TRISD
--
procedure port_D_low_direction'put(byte in x) is
  TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function port_D_low_direction'get return byte is
  return TRISD & 0x0F
end function
--
procedure port_D_high_direction'put(byte in x) is
  TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function port_D_high_direction'get return byte is
  return (TRISD >> 4)
end function
--
var volatile bit    TRISD7               shared at TRISD : 7
var volatile bit    pin_D7_direction     shared at TRISD : 7
var volatile bit    TRISD6               shared at TRISD : 6
var volatile bit    pin_D6_direction     shared at TRISD : 6
var volatile bit    TRISD5               shared at TRISD : 5
var volatile bit    pin_D5_direction     shared at TRISD : 5
var volatile bit    TRISD4               shared at TRISD : 4
var volatile bit    pin_D4_direction     shared at TRISD : 4
var volatile bit    TRISD3               shared at TRISD : 3
var volatile bit    pin_D3_direction     shared at TRISD : 3
var volatile bit    TRISD2               shared at TRISD : 2
var volatile bit    pin_D2_direction     shared at TRISD : 2
var volatile bit    TRISD1               shared at TRISD : 1
var volatile bit    pin_D1_direction     shared at TRISD : 1
var volatile bit    TRISD0               shared at TRISD : 0
var volatile bit    pin_D0_direction     shared at TRISD : 0
-- ------------------------------------------------
var volatile byte   TRISE                shared at 0xF96
var volatile byte   port_E_direction     shared at TRISE
--
procedure port_E_low_direction'put(byte in x) is
  TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function port_E_low_direction'get return byte is
  return TRISE & 0x0F
end function
--
procedure port_E_high_direction'put(byte in x) is
  TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function port_E_high_direction'get return byte is
  return (TRISE >> 4)
end function
--
var volatile bit    TRISE7               shared at TRISE : 7
var volatile bit    pin_E7_direction     shared at TRISE : 7
var volatile bit    TRISE6               shared at TRISE : 6
var volatile bit    pin_E6_direction     shared at TRISE : 6
var volatile bit    TRISE5               shared at TRISE : 5
var volatile bit    pin_E5_direction     shared at TRISE : 5
var volatile bit    TRISE4               shared at TRISE : 4
var volatile bit    pin_E4_direction     shared at TRISE : 4
var volatile bit    TRISE3               shared at TRISE : 3
var volatile bit    pin_E3_direction     shared at TRISE : 3
var volatile bit    TRISE2               shared at TRISE : 2
var volatile bit    pin_E2_direction     shared at TRISE : 2
var volatile bit    TRISE1               shared at TRISE : 1
var volatile bit    pin_E1_direction     shared at TRISE : 1
var volatile bit    TRISE0               shared at TRISE : 0
var volatile bit    pin_E0_direction     shared at TRISE : 0
-- ------------------------------------------------
var volatile byte   TRISF                shared at 0xF97
var volatile byte   port_F_direction     shared at TRISF
--
procedure port_F_low_direction'put(byte in x) is
  TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function port_F_low_direction'get return byte is
  return TRISF & 0x0F
end function
--
procedure port_F_high_direction'put(byte in x) is
  TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function port_F_high_direction'get return byte is
  return (TRISF >> 4)
end function
--
var volatile bit    TRISF7               shared at TRISF : 7
var volatile bit    pin_F7_direction     shared at TRISF : 7
var volatile bit    TRISF6               shared at TRISF : 6
var volatile bit    pin_F6_direction     shared at TRISF : 6
var volatile bit    TRISF5               shared at TRISF : 5
var volatile bit    pin_F5_direction     shared at TRISF : 5
var volatile bit    TRISF4               shared at TRISF : 4
var volatile bit    pin_F4_direction     shared at TRISF : 4
var volatile bit    TRISF3               shared at TRISF : 3
var volatile bit    pin_F3_direction     shared at TRISF : 3
var volatile bit    TRISF2               shared at TRISF : 2
var volatile bit    pin_F2_direction     shared at TRISF : 2
var volatile bit    TRISF1               shared at TRISF : 1
var volatile bit    pin_F1_direction     shared at TRISF : 1
var volatile bit    TRISF0               shared at TRISF : 0
var volatile bit    pin_F0_direction     shared at TRISF : 0
-- ------------------------------------------------
var volatile byte   TRISG                shared at 0xF98
var volatile byte   port_G_direction     shared at TRISG
--
procedure port_G_low_direction'put(byte in x) is
  TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function port_G_low_direction'get return byte is
  return TRISG & 0x0F
end function
--
procedure port_G_high_direction'put(byte in x) is
  TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function port_G_high_direction'get return byte is
  return (TRISG >> 4)
end function
--
var volatile bit    TRISG4               shared at TRISG : 4
var volatile bit    pin_G4_direction     shared at TRISG : 4
var volatile bit    TRISG3               shared at TRISG : 3
var volatile bit    pin_G3_direction     shared at TRISG : 3
var volatile bit    TRISG2               shared at TRISG : 2
var volatile bit    pin_G2_direction     shared at TRISG : 2
var volatile bit    TRISG1               shared at TRISG : 1
var volatile bit    pin_G1_direction     shared at TRISG : 1
var volatile bit    TRISG0               shared at TRISG : 0
var volatile bit    pin_G0_direction     shared at TRISG : 0
-- ------------------------------------------------
var volatile byte   TRISH                shared at 0xF99
var volatile byte   port_H_direction     shared at TRISH
--
procedure port_H_low_direction'put(byte in x) is
  TRISH = (TRISH & 0xF0) | (x & 0x0F)
end procedure
function port_H_low_direction'get return byte is
  return TRISH & 0x0F
end function
--
procedure port_H_high_direction'put(byte in x) is
  TRISH = (TRISH & 0x0F) | (x << 4)
end procedure
function port_H_high_direction'get return byte is
  return (TRISH >> 4)
end function
--
var volatile bit    TRISH7               shared at TRISH : 7
var volatile bit    pin_H7_direction     shared at TRISH : 7
var volatile bit    TRISH6               shared at TRISH : 6
var volatile bit    pin_H6_direction     shared at TRISH : 6
var volatile bit    TRISH5               shared at TRISH : 5
var volatile bit    pin_H5_direction     shared at TRISH : 5
var volatile bit    TRISH4               shared at TRISH : 4
var volatile bit    pin_H4_direction     shared at TRISH : 4
var volatile bit    TRISH3               shared at TRISH : 3
var volatile bit    pin_H3_direction     shared at TRISH : 3
var volatile bit    TRISH2               shared at TRISH : 2
var volatile bit    pin_H2_direction     shared at TRISH : 2
var volatile bit    TRISH1               shared at TRISH : 1
var volatile bit    pin_H1_direction     shared at TRISH : 1
var volatile bit    TRISH0               shared at TRISH : 0
var volatile bit    pin_H0_direction     shared at TRISH : 0
-- ------------------------------------------------
var volatile byte   TRISJ                shared at 0xF9A
var volatile byte   port_J_direction     shared at TRISJ
--
procedure port_J_low_direction'put(byte in x) is
  TRISJ = (TRISJ & 0xF0) | (x & 0x0F)
end procedure
function port_J_low_direction'get return byte is
  return TRISJ & 0x0F
end function
--
procedure port_J_high_direction'put(byte in x) is
  TRISJ = (TRISJ & 0x0F) | (x << 4)
end procedure
function port_J_high_direction'get return byte is
  return (TRISJ >> 4)
end function
--
var volatile bit    TRISJ7               shared at TRISJ : 7
var volatile bit    pin_J7_direction     shared at TRISJ : 7
var volatile bit    TRISJ6               shared at TRISJ : 6
var volatile bit    pin_J6_direction     shared at TRISJ : 6
var volatile bit    TRISJ5               shared at TRISJ : 5
var volatile bit    pin_J5_direction     shared at TRISJ : 5
var volatile bit    TRISJ4               shared at TRISJ : 4
var volatile bit    pin_J4_direction     shared at TRISJ : 4
var volatile bit    TRISJ3               shared at TRISJ : 3
var volatile bit    pin_J3_direction     shared at TRISJ : 3
var volatile bit    TRISJ2               shared at TRISJ : 2
var volatile bit    pin_J2_direction     shared at TRISJ : 2
var volatile bit    TRISJ1               shared at TRISJ : 1
var volatile bit    pin_J1_direction     shared at TRISJ : 1
var volatile bit    TRISJ0               shared at TRISJ : 0
var volatile bit    pin_J0_direction     shared at TRISJ : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE              shared at 0xF9B
var volatile bit    HF256DIV             shared at OSCTUNE : 7
var volatile bit    PLLEN                shared at OSCTUNE : 6
var volatile bit*5  TUN                  shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   MEMCON               shared at 0xF9C
var volatile bit    EBDIS                shared at MEMCON : 7
var volatile bit*2  WAIT                 shared at MEMCON : 4
var volatile bit*2  WM                   shared at MEMCON : 0
-- ------------------------------------------------
var volatile byte   PIE1                 shared at 0xF9D
var volatile bit    PSPIE                shared at PIE1 : 7
var volatile bit    ADIE                 shared at PIE1 : 6
var volatile bit    RC1IE                shared at PIE1 : 5
var volatile bit    TX1IE                shared at PIE1 : 4
var volatile bit    SSPIE1               shared at PIE1 : 3
var volatile bit    CCP1IE               shared at PIE1 : 2
var volatile bit    TMR2IE               shared at PIE1 : 1
var volatile bit    TMR1IE               shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                 shared at 0xF9E
var volatile bit    PSPIF                shared at PIR1 : 7
var volatile bit    ADIF                 shared at PIR1 : 6
var volatile bit    RC1IF                shared at PIR1 : 5
var volatile bit    TX1IF                shared at PIR1 : 4
var volatile bit    SSPIF1               shared at PIR1 : 3
var volatile bit    CCP1IF               shared at PIR1 : 2
var volatile bit    TMR2IF               shared at PIR1 : 1
var volatile bit    TMR1IF               shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                 shared at 0xF9F
var volatile bit    PSPIP                shared at IPR1 : 7
var volatile bit    ADIP                 shared at IPR1 : 6
var volatile bit    RC1IP                shared at IPR1 : 5
var volatile bit    TX1IP                shared at IPR1 : 4
var volatile bit    SSPIP1               shared at IPR1 : 3
var volatile bit    CCP1IP               shared at IPR1 : 2
var volatile bit    TMR2IP               shared at IPR1 : 1
var volatile bit    TMR1IP               shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                 shared at 0xFA0
var volatile bit    OSCFIE               shared at PIE2 : 7
var volatile bit    CMIE                 shared at PIE2 : 6
var volatile bit    EEIE                 shared at PIE2 : 4
var volatile bit    BCLIE1               shared at PIE2 : 3
var volatile bit    LVDIE                shared at PIE2 : 2
var volatile bit    TMR3IE               shared at PIE2 : 1
var volatile bit    CCP2IE               shared at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIR2                 shared at 0xFA1
var volatile bit    OSCFIF               shared at PIR2 : 7
var volatile bit    CMIF                 shared at PIR2 : 6
var volatile bit    EEIF                 shared at PIR2 : 4
var volatile bit    BCLIF1               shared at PIR2 : 3
var volatile bit    LVDIF                shared at PIR2 : 2
var volatile bit    TMR3IF               shared at PIR2 : 1
var volatile bit    CCP2IF               shared at PIR2 : 0
-- ------------------------------------------------
var volatile byte   IPR2                 shared at 0xFA2
var volatile bit    OSCFIP               shared at IPR2 : 7
var volatile bit    CMIP                 shared at IPR2 : 6
var volatile bit    EEIP                 shared at IPR2 : 4
var volatile bit    BCLIP1               shared at IPR2 : 3
var volatile bit    LVDIP                shared at IPR2 : 2
var volatile bit    TMR3IP               shared at IPR2 : 1
var volatile bit    CCP2IP               shared at IPR2 : 0
-- ------------------------------------------------
var volatile byte   PIE3                 shared at 0xFA3
var volatile bit    SSPIE2               shared at PIE3 : 7
var volatile bit    BCLIE2               shared at PIE3 : 6
var volatile bit    RC2IE                shared at PIE3 : 5
var volatile bit    TX2IE                shared at PIE3 : 4
var volatile bit    TMR4IE               shared at PIE3 : 3
var volatile bit    CCP5IE               shared at PIE3 : 2
var volatile bit    CCP4IE               shared at PIE3 : 1
var volatile bit    CCP3IE               shared at PIE3 : 0
-- ------------------------------------------------
var volatile byte   PIR3                 shared at 0xFA4
var volatile bit    SSPIF2               shared at PIR3 : 7
var volatile bit    BCLIF2               shared at PIR3 : 6
var volatile bit    RC2IF                shared at PIR3 : 5
var volatile bit    TX2IF                shared at PIR3 : 4
var volatile bit    TMR4IF               shared at PIR3 : 3
var volatile bit    CCP5IF               shared at PIR3 : 2
var volatile bit    CCP4IF               shared at PIR3 : 1
var volatile bit    CCP3IF               shared at PIR3 : 0
-- ------------------------------------------------
var volatile byte   IPR3                 shared at 0xFA5
var volatile bit    SSPIP2               shared at IPR3 : 7
var volatile bit    BCLIP2               shared at IPR3 : 6
var volatile bit    RC2IP                shared at IPR3 : 5
var volatile bit    TX2IP                shared at IPR3 : 4
var volatile bit    TMR4IP               shared at IPR3 : 3
var volatile bit    CCP5IP               shared at IPR3 : 2
var volatile bit    CCP4IP               shared at IPR3 : 1
var volatile bit    CCP3IP               shared at IPR3 : 0
-- ------------------------------------------------
var volatile byte   EECON1               shared at 0xFA6
var volatile bit    EEPGD                shared at EECON1 : 7
var volatile bit    CFGS                 shared at EECON1 : 6
var volatile bit    FREE                 shared at EECON1 : 4
var volatile bit    WRERR                shared at EECON1 : 3
var volatile bit    WREN                 shared at EECON1 : 2
var volatile bit    WR                   shared at EECON1 : 1
var volatile bit    RD                   shared at EECON1 : 0
-- ------------------------------------------------
var volatile byte   EECON2               shared at 0xFA7
-- ------------------------------------------------
var volatile byte   EEDATA               shared at 0xFA8
-- ------------------------------------------------
var volatile byte   EEADR                shared at 0xFA9
-- ------------------------------------------------
var volatile byte   EEADRH               shared at 0xFAA
-- ------------------------------------------------
var volatile byte   RCSTA1               shared at 0xFAB
var volatile bit    RCSTA1_SPEN          shared at RCSTA1 : 7        -- !!!
var volatile bit    RCSTA1_RX9           shared at RCSTA1 : 6        -- !!!
var volatile bit    RCSTA1_SREN          shared at RCSTA1 : 5        -- !!!
var volatile bit    RCSTA1_CREN          shared at RCSTA1 : 4        -- !!!
var volatile bit    RCSTA1_ADDEN         shared at RCSTA1 : 3        -- !!!
var volatile bit    RCSTA1_FERR          shared at RCSTA1 : 2        -- !!!
var volatile bit    RCSTA1_OERR          shared at RCSTA1 : 1        -- !!!
var volatile bit    RCSTA1_RX9D          shared at RCSTA1 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   TXSTA1               shared at 0xFAC
var volatile bit    TXSTA1_CSRC          shared at TXSTA1 : 7        -- !!!
var volatile bit    TXSTA1_TX9           shared at TXSTA1 : 6        -- !!!
var volatile bit    TXSTA1_TXEN          shared at TXSTA1 : 5        -- !!!
var volatile bit    TXSTA1_SYNC          shared at TXSTA1 : 4        -- !!!
var volatile bit    TXSTA1_SENDB         shared at TXSTA1 : 3        -- !!!
var volatile bit    TXSTA1_BRGH          shared at TXSTA1 : 2        -- !!!
var volatile bit    TXSTA1_TRMT          shared at TXSTA1 : 1        -- !!!
var volatile bit    TXSTA1_TX9D          shared at TXSTA1 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   TXREG1               shared at 0xFAD
var volatile byte   TXREG1_TXREG         shared at TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1               shared at 0xFAE
var volatile byte   RCREG1_RCREG         shared at RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1               shared at 0xFAF
var volatile byte   SPBRG1_SPBRG         shared at SPBRG1
-- ------------------------------------------------
var volatile byte   PSPCON               shared at 0xFB0
var volatile bit    IBF                  shared at PSPCON : 7
var volatile bit    OBF                  shared at PSPCON : 6
var volatile bit    IBOV                 shared at PSPCON : 5
var volatile bit    PSPMODE              shared at PSPCON : 4
-- ------------------------------------------------
var volatile byte   T3CON                shared at 0xFB1
var volatile bit    T3CON_RD16           shared at T3CON : 7        -- !!!
var volatile bit    T3CCP2               shared at T3CON : 6
var volatile bit*2  T3CKPS               shared at T3CON : 4
var volatile bit    T3CCP1               shared at T3CON : 3
var volatile bit    NT3SYNC              shared at T3CON : 2
var volatile bit    TMR3CS               shared at T3CON : 1
var volatile bit    TMR3ON               shared at T3CON : 0
-- ------------------------------------------------
var volatile word   TMR3                 shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3L                shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3H                shared at 0xFB3
-- ------------------------------------------------
var volatile byte   CMCON                shared at 0xFB4
var volatile bit    C2OUT                shared at CMCON : 7
var volatile bit    C1OUT                shared at CMCON : 6
var volatile bit    C2INV                shared at CMCON : 5
var volatile bit    C1INV                shared at CMCON : 4
var volatile bit    CIS                  shared at CMCON : 3
var volatile bit*3  CM                   shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON               shared at 0xFB5
var volatile bit    CVREN                shared at CVRCON : 7
var volatile bit    CVROE                shared at CVRCON : 6
var volatile bit    CVRR                 shared at CVRCON : 5
var volatile bit    CVRSS                shared at CVRCON : 4
var volatile bit*4  CVR                  shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   ECCP1AS              shared at 0xFB6
var volatile bit    ECCP1AS_ECCP1ASE     shared at ECCP1AS : 7        -- !!!
var volatile bit*2  ECCP1AS_PSS1AC       shared at ECCP1AS : 2
var volatile bit*2  ECCP1AS_PSS1BD       shared at ECCP1AS : 0
-- ------------------------------------------------
var volatile byte   CCP3CON              shared at 0xFB7
var volatile bit*2  CCP3CON_P3M          shared at CCP3CON : 6
var volatile bit*2  CCP3CON_DC3B         shared at CCP3CON : 4
var volatile bit*4  CCP3CON_CCP3M        shared at CCP3CON : 0
-- ------------------------------------------------
var volatile word   CCPR3                shared at 0xFB8
var volatile word   CCPR3_CCPR3          shared at CCPR3
-- ------------------------------------------------
var volatile byte   CCPR3L               shared at 0xFB8
var volatile byte   CCPR3L_CCPR3L        shared at CCPR3L
-- ------------------------------------------------
var volatile byte   CCPR3H               shared at 0xFB9
var volatile byte   CCPR3H_CCPR3H        shared at CCPR3H
-- ------------------------------------------------
var volatile byte   CCP2CON              shared at 0xFBA
var volatile bit*2  CCP2CON_P2M          shared at CCP2CON : 6
var volatile bit*2  CCP2CON_DC2B         shared at CCP2CON : 4
var volatile bit*4  CCP2CON_CCP2M        shared at CCP2CON : 0
-- ------------------------------------------------
var volatile word   CCPR2                shared at 0xFBB
var volatile word   CCPR2_CCPR2          shared at CCPR2
-- ------------------------------------------------
var volatile byte   CCPR2L               shared at 0xFBB
var volatile byte   CCPR2L_CCPR2L        shared at CCPR2L
-- ------------------------------------------------
var volatile byte   CCPR2H               shared at 0xFBC
var volatile byte   CCPR2H_CCPR2H        shared at CCPR2H
-- ------------------------------------------------
var volatile byte   CCP1CON              shared at 0xFBD
var volatile bit*2  CCP1CON_P1M          shared at CCP1CON : 6
var volatile bit*2  CCP1CON_DC1B         shared at CCP1CON : 4
var volatile bit*4  CCP1CON_CCP1M        shared at CCP1CON : 0
-- ------------------------------------------------
var volatile word   CCPR1                shared at 0xFBE
var volatile word   CCPR1_CCPR1          shared at CCPR1
-- ------------------------------------------------
var volatile byte   CCPR1L               shared at 0xFBE
var volatile byte   CCPR1L_CCPR1L        shared at CCPR1L
-- ------------------------------------------------
var volatile byte   CCPR1H               shared at 0xFBF
var volatile byte   CCPR1H_CCPR1H        shared at CCPR1H
-- ------------------------------------------------
var volatile byte   ADCON2               shared at 0xFC0
var volatile bit    ADFM                 shared at ADCON2 : 7
var volatile bit*3  ACQT                 shared at ADCON2 : 3
var volatile bit*3  ADCS                 shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1               shared at 0xFC1
var volatile bit*2  VCFG                 shared at ADCON1 : 4
var volatile bit*4  PCFG                 shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0               shared at 0xFC2
var volatile bit*4  CHS                  shared at ADCON0 : 2
var volatile bit    GO                   shared at ADCON0 : 1
var volatile bit    NDONE                shared at ADCON0 : 1
var volatile bit    ADON                 shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL               shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH               shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSP1CON2             shared at 0xFC5
var volatile bit    SSP1CON2_GCEN        shared at SSP1CON2 : 7        -- !!!
var volatile bit    SSP1CON2_ACKSTAT     shared at SSP1CON2 : 6        -- !!!
var volatile bit    SSP1CON2_ACKDT       shared at SSP1CON2 : 5        -- !!!
var volatile bit    SSP1CON2_ACKEN       shared at SSP1CON2 : 4        -- !!!
var volatile bit    SSP1CON2_RCEN        shared at SSP1CON2 : 3        -- !!!
var volatile bit    SSP1CON2_PEN         shared at SSP1CON2 : 2        -- !!!
var volatile bit    SSP1CON2_RSEN        shared at SSP1CON2 : 1        -- !!!
var volatile bit    SSP1CON2_SEN         shared at SSP1CON2 : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SSP1CON1             shared at 0xFC6
var volatile bit    SSP1CON1_WCOL        shared at SSP1CON1 : 7        -- !!!
var volatile bit    SSP1CON1_SSPOV       shared at SSP1CON1 : 6        -- !!!
var volatile bit    SSP1CON1_SSPEN       shared at SSP1CON1 : 5        -- !!!
var volatile bit    SSP1CON1_CKP         shared at SSP1CON1 : 4        -- !!!
var volatile bit*4  SSP1CON1_SSPM        shared at SSP1CON1 : 0
-- ------------------------------------------------
var volatile byte   SSP1STAT             shared at 0xFC7
var volatile bit    SSP1STAT_SMP         shared at SSP1STAT : 7        -- !!!
var volatile bit    SSP1STAT_CKE         shared at SSP1STAT : 6        -- !!!
var volatile bit    SSP1STAT_D           shared at SSP1STAT : 5        -- !!!
var volatile bit    SSP1STAT_NA          shared at SSP1STAT : 5        -- !!!
var volatile bit    SSP1STAT_P           shared at SSP1STAT : 4        -- !!!
var volatile bit    SSP1STAT_S           shared at SSP1STAT : 3        -- !!!
var volatile bit    SSP1STAT_R           shared at SSP1STAT : 2        -- !!!
var volatile bit    SSP1STAT_NW          shared at SSP1STAT : 2        -- !!!
var volatile bit    SSP1STAT_UA          shared at SSP1STAT : 1        -- !!!
var volatile bit    SSP1STAT_BF          shared at SSP1STAT : 0        -- !!!
-- ------------------------------------------------
var volatile byte   SSP1ADD              shared at 0xFC8
var volatile byte   SSP1ADD_SSPADD       shared at SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF              shared at 0xFC9
var volatile byte   SSP1BUF_SSPBUF       shared at SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                shared at 0xFCA
var volatile bit*4  T2CON_TOUTPS         shared at T2CON : 3
var volatile bit    TMR2ON               shared at T2CON : 2
var volatile bit*2  T2CKPS               shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                  shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                 shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                shared at 0xFCD
var volatile bit    T1CON_RD16           shared at T1CON : 7        -- !!!
var volatile bit    T1RUN                shared at T1CON : 6
var volatile bit*2  T1CKPS               shared at T1CON : 4
var volatile bit    T1OSCEN              shared at T1CON : 3
var volatile bit    NT1SYNC              shared at T1CON : 2
var volatile bit    TMR1CS               shared at T1CON : 1
var volatile bit    TMR1ON               shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                 shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                 shared at 0xFD0
var volatile bit    IPEN                 shared at RCON : 7
var volatile bit    SBOREN               shared at RCON : 6
var volatile bit    NRI                  shared at RCON : 4
var volatile bit    NTO                  shared at RCON : 3
var volatile bit    NPD                  shared at RCON : 2
var volatile bit    NPOR                 shared at RCON : 1
var volatile bit    NBOR                 shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON               shared at 0xFD1
var volatile bit    SWDTEN               shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   LVDCON               shared at 0xFD2
var volatile bit    IRVST                shared at LVDCON : 5
var volatile bit    LVDEN                shared at LVDCON : 4
var volatile bit*4  LVDL                 shared at LVDCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON               shared at 0xFD3
var volatile bit    IDLEN                shared at OSCCON : 7
var volatile bit*3  IRCF                 shared at OSCCON : 4
var volatile bit    OSTS                 shared at OSCCON : 3
var volatile bit    FLTS                 shared at OSCCON : 2
var volatile bit*2  SCS                  shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                shared at 0xFD5
var volatile bit    TMR0ON               shared at T0CON : 7
var volatile bit    T08BIT               shared at T0CON : 6
var volatile bit    T0CS                 shared at T0CON : 5
var volatile bit    T0SE                 shared at T0CON : 4
var volatile bit    PSA                  shared at T0CON : 3
var volatile bit*3  T0PS                 shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                 shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS               shared at 0xFD8
var volatile bit    N                    shared at STATUS : 4
var volatile bit    OV                   shared at STATUS : 3
var volatile bit    Z                    shared at STATUS : 2
var volatile bit    DC                   shared at STATUS : 1
var volatile bit    C                    shared at STATUS : 0
var volatile byte   _status              shared at 0xFD8      -- (compiler)
const        byte   _n                   =  4      -- (compiler)
const        byte   _ov                  =  3      -- (compiler)
const        byte   _z                   =  2      -- (compiler)
const        byte   _dc                  =  1      -- (compiler)
const        byte   _c                   =  0      -- (compiler)
const        byte   _banked              =  1      -- (compiler - use BSR)
const        byte   _access              =  0      -- (compiler - use ACCESS)
-- ------------------------------------------------
var volatile word   FSR2                 shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                shared at 0xFDA
-- ------------------------------------------------
var volatile byte   PLUSW2               shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2              shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2             shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2             shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                  shared at 0xFE0
-- ------------------------------------------------
var volatile word   FSR1                 shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                shared at 0xFE2
-- ------------------------------------------------
var volatile byte   PLUSW1               shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1              shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1             shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1             shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                 shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                 shared at 0xFE9
var volatile word   _fsr0                shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0L                shared at 0xFE9
var volatile byte   _fsr0l               shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0H                shared at 0xFEA
var volatile byte   _fsr0h               shared at 0xFEA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PLUSW0               shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0              shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0             shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0             shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                shared at 0xFEF
var volatile byte   _ind0                shared at 0xFEF      -- (compiler)
-- ------------------------------------------------
var volatile byte   INTCON3              shared at 0xFF0
var volatile bit    INT2IP               shared at INTCON3 : 7
var volatile bit    INT1IP               shared at INTCON3 : 6
var volatile bit    INT3IE               shared at INTCON3 : 5
var volatile bit    INT2IE               shared at INTCON3 : 4
var volatile bit    INT1IE               shared at INTCON3 : 3
var volatile bit    INT3IF               shared at INTCON3 : 2
var volatile bit    INT2IF               shared at INTCON3 : 1
var volatile bit    INT1IF               shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2              shared at 0xFF1
var volatile bit    NRBPU                shared at INTCON2 : 7
var volatile bit    INTEDG0              shared at INTCON2 : 6
var volatile bit    INTEDG1              shared at INTCON2 : 5
var volatile bit    INTEDG2              shared at INTCON2 : 4
var volatile bit    INTEDG3              shared at INTCON2 : 3
var volatile bit    TMR0IP               shared at INTCON2 : 2
var volatile bit    INT3IP               shared at INTCON2 : 1
var volatile bit    RBIP                 shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON               shared at 0xFF2
var volatile bit    GIE                  shared at INTCON : 7
var volatile bit    GIEH                 shared at INTCON : 7
var volatile bit    PEIE                 shared at INTCON : 6
var volatile bit    GIEL                 shared at INTCON : 6
var volatile bit    TMR0IE               shared at INTCON : 5
var volatile bit    T0IE                 shared at INTCON : 5
var volatile bit    INT0IE               shared at INTCON : 4
var volatile bit    RBIE                 shared at INTCON : 3
var volatile bit    TMR0IF               shared at INTCON : 2
var volatile bit    T0IF                 shared at INTCON : 2
var volatile bit    INT0IF               shared at INTCON : 1
var volatile bit    RBIF                 shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                 shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT               shared at 0xFF5
var volatile byte   _tablat              shared at 0xFF5      -- (compiler)
-- ------------------------------------------------
var volatile byte*3 TBLPTR               shared at 0xFF6
var volatile bit    TBLPTR_ACSS          shared at TBLPTR : 5        -- !!!
var volatile byte*3 _tblptr              shared at 0xFF6      -- (compiler)
-- ------------------------------------------------
var volatile byte   TBLPTRL              shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH              shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU              shared at 0xFF8
var volatile bit    TBLPTRU_ACSS         shared at TBLPTRU : 5        -- !!!
-- ------------------------------------------------
var volatile byte*3 PCLAT                shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                  shared at 0xFF9
var volatile byte   _pcl                 shared at 0xFF9      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATH               shared at 0xFFA
var volatile byte   _pclath              shared at 0xFFA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATU               shared at 0xFFB
var volatile bit*5  PCU                  shared at PCLATU : 0
var volatile byte   _pclatu              shared at 0xFFB      -- (compiler)
-- ------------------------------------------------
var volatile byte   STKPTR               shared at 0xFFC
var volatile bit    STKFUL               shared at STKPTR : 7
var volatile bit    STKUNF               shared at STKPTR : 6
-- ------------------------------------------------
var volatile byte*3 TOS                  shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                 shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                 shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                 shared at 0xFFF
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- addr 0x300001
--
pragma fuse_def OSC:1 0xF {
       EXTOSC_NOCLKOUT = 0xC
       INTOSC_NOCLKOUT = 0x9
       HS_PLL = 0x6
       EC_NOCLKOUT = 0x5
       HS = 0x2
       XT = 0x1
       LP = 0x0
       }
pragma fuse_def FCMEN:1 0x40 {
       DISABLED = 0x0
       ENABLED = 0x40
       }
pragma fuse_def IESO:1 0x80 {
       DISABLED = 0x0
       ENABLED = 0x80
       }
--
-- addr 0x300002
--
pragma fuse_def PWRTE:2 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def BROWNOUT:2 0x6 {
       ENABLED = 0x6
       RUNONLY = 0x4
       CONTROL = 0x2
       DISABLED = 0x0
       }
pragma fuse_def VOLTAGE:2 0x18 {
       V20 = 0x18
       V27 = 0x10
       V42 = 0x8
       V45 = 0x0
       }
--
-- addr 0x300003
--
pragma fuse_def WDT:3 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def WDTPS:3 0x1E {
       P32768 = 0x1E
       P16384 = 0x1C
       P8192 = 0x1A
       P4096 = 0x18
       P2048 = 0x16
       P1024 = 0x14
       P512 = 0x12
       P256 = 0x10
       P128 = 0xE
       P64 = 0xC
       P32 = 0xA
       P16 = 0x8
       P8 = 0x6
       P4 = 0x4
       P2 = 0x2
       P1 = 0x0
       }
--
-- addr 0x300004
--
pragma fuse_def PMODE:4 0x3 {
       MICROCONTROLLER = 0x3
       MICROPROCESSOR = 0x2
       MICROPROCESSOR_W_BOOT = 0x1
       EXT_MICROCONTROLLER = 0x0
       }
pragma fuse_def ABW:4 0x30 {
       _20_BIT = 0x30
       _16_BIT = 0x20
       _12_BIT = 0x10
       _8_BIT = 0x0
       }
pragma fuse_def BW:4 0x40 {
       _16_BIT_EXTERNAL_BUS = 0x40
       _8_BIT_EXTERNAL_BUS = 0x0
       }
pragma fuse_def WAIT:4 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300005
--
pragma fuse_def CCP2MUX:5 0x1 {
       RC1 = 0x1
       RE7_MICROCONTROLLER_MODE_RB3_ALL_OTHER_MODES = 0x0
       }
pragma fuse_def ECCPMX:5 0x2 {
       ENHANCED_CCP1_3__P1B_P1C_P3B_P3C__MUXED_WITH_RE6_RE5_RE4_RE3 = 0x2
       ENHANCED_CCP1_3__P1B_P1C_P3B_P3C__MUXED_WITH_RH7_RH6_RH5_RH4 = 0x0
       }
pragma fuse_def LPT1OSC:5 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def MCLR:5 0x80 {
       EXTERNAL = 0x80
       INTERNAL = 0x0
       }
--
-- addr 0x300006
--
pragma fuse_def STVR:6 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def LVP:6 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def BBSIZ:6 0x30 {
       _4K_WORDS__8_KBYTES_ = 0x20
       _2K_WORDS__4_KBYTES_ = 0x10
       _1K_WORDS__2_KBYTES_ = 0x0
       }
pragma fuse_def XINST:6 0x40 {
       ENABLED = 0x40
       DISABLED = 0x0
       }
pragma fuse_def BACKBUG:6 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300008
--
pragma fuse_def CP_0:8 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def CP_1:8 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def CP_2:8 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def CP_3:8 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def CP_4:8 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def CP_5:8 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def CP_6:8 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def CP_7:8 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300009
--
pragma fuse_def CPB:9 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def CPD:9 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000A
--
pragma fuse_def WRT_0:10 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def WRT_1:10 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def WRT_2:10 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def WRT_3:10 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def WRT_4:10 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def WRT_5:10 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def WRT_6:10 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def WRT_7:10 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000B
--
pragma fuse_def WRTC:11 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def WRTB:11 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def WRTD:11 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000C
--
pragma fuse_def EBTR_0:12 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def EBTR_1:12 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def EBTR_2:12 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def EBTR_3:12 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def EBTR_4:12 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def EBTR_5:12 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def EBTR_6:12 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def EBTR_7:12 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000D
--
pragma fuse_def EBTRB:13 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
--
